{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\PractikaREACT\\\\app\\\\src\\\\components\\\\btnDarkMode\\\\BtnDarkMode.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useLocalStorage } from \"../../utilits/useLocalStorage\";\nimport sun from \"./sun.svg\";\nimport moon from \"./moon.svg\";\nimport \"./style.css\";\nimport detectDarkMode from \"../../utilits/detectDarkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BtnDarkMode = () => {\n  _s();\n  const [darkMode, setDarkMode] = useLocalStorage(\"darkMode\", detectDarkMode());\n  const btnRef = useRef(null);\n  useEffect(() => {\n    if (darkMode === \"dark\") {\n      document.body.classList.add(\"dark\");\n      btnRef.current.classList.add(\"dark-mode-btn--active\");\n    } else {\n      document.body.classList.remove(\"dark\");\n      btnRef.current.classList.remove(\"dark-mode-btn--active\");\n    }\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(currentValue => {\n      return currentValue === \"ligth\" ? \"dark\" : \"ligth\";\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: btnRef,\n    className: \"dark-mode-btn\",\n    onClick: toggleDarkMode,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: sun,\n      alt: \"Light mode\",\n      className: \"dark-mode-btn__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moon,\n      alt: \"Dark mode\",\n      className: \"dark-mode-btn__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(BtnDarkMode, \"vbxm/5G3JGYDSNgyeOlbPUfy/hU=\", false, function () {\n  return [useLocalStorage];\n});\n_c = BtnDarkMode;\nexport default BtnDarkMode;\nvar _c;\n$RefreshReg$(_c, \"BtnDarkMode\");","map":{"version":3,"names":["useEffect","useRef","useLocalStorage","sun","moon","detectDarkMode","jsxDEV","_jsxDEV","BtnDarkMode","_s","darkMode","setDarkMode","btnRef","document","body","classList","add","current","remove","toggleDarkMode","currentValue","ref","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/PractikaREACT/app/src/components/btnDarkMode/BtnDarkMode.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useLocalStorage } from \"../../utilits/useLocalStorage\";\r\nimport sun from \"./sun.svg\";\r\nimport moon from \"./moon.svg\";\r\nimport \"./style.css\";\r\nimport detectDarkMode from \"../../utilits/detectDarkMode\";\r\n\r\nconst BtnDarkMode = () => {\r\n  const [darkMode, setDarkMode] = useLocalStorage(\"darkMode\", detectDarkMode());\r\n\r\n  const btnRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (darkMode === \"dark\") {\r\n      document.body.classList.add(\"dark\");\r\n      btnRef.current.classList.add(\"dark-mode-btn--active\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n      btnRef.current.classList.remove(\"dark-mode-btn--active\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode((currentValue) => {\r\n      return currentValue === \"ligth\" ? \"dark\" : \"ligth\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button ref={btnRef} className=\"dark-mode-btn\" onClick={toggleDarkMode}>\r\n      <img src={sun} alt=\"Light mode\" className=\"dark-mode-btn__icon\" />\r\n      <img src={moon} alt=\"Dark mode\" className=\"dark-mode-btn__icon\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnDarkMode;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,aAAa;AACpB,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,eAAe,CAAC,UAAU,EAAEG,cAAc,CAAC,CAAC,CAAC;EAE7E,MAAMO,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,KAAK,MAAM,EAAE;MACvBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACnCJ,MAAM,CAACK,OAAO,CAACF,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACvD,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACtCN,MAAM,CAACK,OAAO,CAACF,SAAS,CAACG,MAAM,CAAC,uBAAuB,CAAC;IAC1D;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BR,WAAW,CAAES,YAAY,IAAK;MAC5B,OAAOA,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAQc,GAAG,EAAET,MAAO;IAACU,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEJ,cAAe;IAAAK,QAAA,gBACrEjB,OAAA;MAAKkB,GAAG,EAAEtB,GAAI;MAACuB,GAAG,EAAC,YAAY;MAACJ,SAAS,EAAC;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEvB,OAAA;MAAKkB,GAAG,EAAErB,IAAK;MAACsB,GAAG,EAAC,WAAW;MAACJ,SAAS,EAAC;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEb,CAAC;AAACrB,EAAA,CA3BID,WAAW;EAAA,QACiBN,eAAe;AAAA;AAAA6B,EAAA,GAD3CvB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}